/*
 * Copyright (C) 2022 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

package motion;


//
message Trace {
  // persistent client ID of the trace.
  string id = 1;
  // storage format of the trace.
  int32 version = 2;
  // User defined name of the trace.
  string name = 3;
  // Client time when the trace was captured. Only for UI purposes
  .google.protobuf.Timestamp capture_time = 4;

  // the process for which this trace was captured.
  string process_name =5 ;
  // the window name for which the view_hierarcy was captured.
  string window_name =6 ;

  // duration of the trace.
  .google.protobuf.Duration duration = 7;

  VideoMetadata video_metadata = 8;

}

message VideoMetadata {
  int32 width_px = 1;
  int32 height_px = 2;
  int32 density = 3;
}

// Per-frame information
message Frame  {

  // Actual framer nunumber of the frame
  int64 frame_number = 1;

  // relative timestamp of the frame in nanosecons, .
  int64 frame_nanos = 2;

  // The video time in seconds to seek to for this frame.
  double video_time_seconds = 4;

  // The view hierarchy
  ViewNode view_hierarchy = 3;



}

// Captures a view with
// This is copied so that the evolution of the RPC API is independant of the
// storage format.
message ViewNode {
  // View Java class name
  string classname = 1;
  int32 hashcode = 2;

  repeated ViewNode children = 3;

  string id = 4;
  int32 left = 5;
  int32 top = 6;
  int32 width = 7;
  int32 height = 8;
  int32 scroll_x = 9;
  int32 scroll_y = 10;

  float translation_x = 11;
  float translation_y = 12;
  float scale_x = 13;
  float scale_y = 14;
  float alpha = 15 ;

  bool will_not_draw = 16;
  bool clip_children = 17;
  int32 visibility = 18;

  float elevation = 19;
}

